/**
 * New node file
 */

module.exports = function(grunt) {

	// Project configuration.
	grunt
			.initConfig({
				pkg : grunt.file.readJSON('package.json'),

				concat : {
					socket_js : {
						files : [ {
							src : [ 'controller/server_sockets.js',
									'contoller/socket_rooms.js' ],
							dest : 'build/controller/server_sockets.js'
						} ],
					}

				},
				copy : {
					templates : {

						files : [ {
							expand : true,
							src : '*',
							dest : 'build/',
							filter : 'isFile'
						} ]
					}

				},

				uglify : {
					options : {
						banner : '/*! <%= pkg.name %> <%= grunt.template.today("yyyy-mm-dd") %> */\n'
					},
					build : {
						src : 'public/javascript/chat_front.js',
						dest : 'build/chat_front.min.js'
					}
				},

				clean : {
					foo : {
						src : [ 'tmp/**/*' ],
						filter : function(filepath) {
							return (grunt.file.isDir(filepath) && require('fs')
									.readdirSync(filepath).length === 0);
						},
					},
				}

			});

	// Load the plugin that provides the "uglify" task.
	grunt.loadNpmTasks('grunt-contrib-uglify');
	grunt.loadNpmTasks('grunt-contrib-concat');
	grunt.loadNpmTasks('grunt-contrib-copy');
	// Default task(s).
	grunt.registerTask('default', [ 'concat', 'copy', 'uglify' ]);
	grunt.registerTask('clean', [ 'clean' ])

};