/**
 * Contains functions for the socket
 */
var number_in_room = 0;
var room_number = 0;
var room_min_size=2;
module.exports = function(io) {

	io.sockets.on('connection', function(socket) {

		if (number_in_room >= room_min_size) {
			room_number++;
		}

		socket.join(room_number)
		number_in_room++;
		io.to(room_number).emit('user connect', {
			'msg' : "User Connected"
		});

		socket.on('disconnect', function() {
			console.log('user disconnected');
			io.to(0).emit('user connect', {
				'msg' : "User Disconnected",
				'for' : 'everyone'
			});
		});

		socket.on('chat message', function(msg) {
			var rooms = socket.adapter.rooms;
			rooms = find_room_by_socket_id(socket.id, rooms);

			io.to(rooms[0]).emit('chat message', {
				'msg' : msg.msg,
				'for' : 'everyone'
			});
		});
	});

	function find_room_by_socket_id(socket_id, rooms) {
		
		for(var key in rooms){
			if(typeof rooms[key]==='object'){
				if(search_object(rooms[key].sockets,))
				if(null!== rooms[key].length && rooms[key].length >= room_min_size){
					console.log(rooms[key][key]);
				}
			
			}
		}
		
	}
	
	
	function search_object(obj, value){
		for ( var key in obj) {

			if (typeof obj[key] === 'object') {
				searchObj(obj[key]);
			}

			if (obj[key] === value) {
				return true;
			}

		}
	}

};